import { Injectable } from '@nestjs/common';
import { Exploit } from '@prisma/client';
import { PrismaService } from 'nestjs-prisma';
import { CreateExploitDto, SearchExploitsRequestDto } from './dto';

@Injectable()
export class ExploitDAO {
  private readonly step = 12; // exploits appearance per page
  constructor(private prisma: PrismaService) {}

  async create(exploitData: CreateExploitDto): Promise<Exploit> {
    return this.prisma.exploit.create({
      data: exploitData,
    });
  }

  async get(id: string): Promise<Exploit> {
    return this.prisma.exploit.findUnique({
      where: { id },
    });
  }

  async searchByName(
    searchExploitsDto: SearchExploitsRequestDto
  ): Promise<Exploit[]> {
    // assume pageNo >= 1
    return this.prisma.exploit.findMany({
      take: this.step,
      skip: (searchExploitsDto.pageNo - 1) * this.step,
      where: {
        name: { startsWith: searchExploitsDto.name },
      },
      orderBy: {
        name: 'asc',
      },
    });
  }

  async verify(id: string): Promise<Exploit> {
    return this.prisma.exploit.update({
      where: { id },
      data: { verify: true },
    });
  }
}
